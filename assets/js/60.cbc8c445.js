(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{483:function(t,a,s){"use strict";s.r(a);var n=s(56),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"彻底掌握基于http网络层的-前端性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#彻底掌握基于http网络层的-前端性能优化"}},[t._v("#")]),t._v(" 彻底掌握基于HTTP网络层的 “前端性能优化”")]),t._v(" "),s("h3",{attrs:{id:"产品性能优化方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#产品性能优化方案"}},[t._v("#")]),t._v(" 产品性能优化方案")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP网络层优化\n\n代码编译层优化 webpack\n\n代码运行层优化 html/css + javascript + vue + react\n\n安全优化 xss + csrf\n\n数据埋点及性能监控\n\n……\n\n")])])]),s("blockquote",[s("p",[t._v("CRP（Critical [ˈkrɪtɪkl] Rendering [ˈrendərɪŋ] Path）关键渲染路径")])]),t._v(" "),s("h2",{attrs:{id:"从输入url地址到看到页面-中间都经历了啥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从输入url地址到看到页面-中间都经历了啥"}},[t._v("#")]),t._v(" 从输入URL地址到看到页面，中间都经历了啥")]),t._v(" "),s("p",[t._v("第一步：URL解析")]),t._v(" "),s("ul",[s("li",[t._v("地址解析\n"),s("img",{attrs:{src:"/docs/js/http1.png",alt:"http1"}})]),t._v(" "),s("li",[t._v("编码")])]),t._v(" "),s("p",[t._v("第二步：缓存检查")]),t._v(" "),s("blockquote",[s("p",[t._v("缓存位置：")]),t._v(" "),s("ul",[s("li",[t._v("Memory Cache : 内存缓存")])])]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("Disk Cache：硬盘缓存")])])]),t._v(" "),s("p",[t._v("打开网页：查找 disk cache 中是否有匹配，如有则使用，如没有则发送网络请求\n普通刷新 (F5)：因TAB没关闭，因此memory cache是可用的，会被优先使用，其次才是disk cache\n强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 Cache-control: no-cache，服务器直接返回 200 和最新内容")]),t._v(" "),s("h3",{attrs:{id:"强缓存-expires-cache-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存-expires-cache-control"}},[t._v("#")]),t._v(" 强缓存 Expires / Cache-Control")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("浏览器对于强缓存的处理：根据第一次请求资源时返回的响应头来确定的\n\nExpires：缓存过期时间，用来指定资源到期的时间（HTTP/1.0）\n\nCache-Control：cache-control: max-age=2592000第一次拿到资源后的2592000秒内（30天），再次发送请求，读取缓存中的信息（HTTP/1.1）\n\n两者同时存在的话，Cache-Control优先级高于Expires\n\n")])])]),s("p",[s("img",{attrs:{src:"/docs/js/http2.png",alt:"http2"}})]),t._v(" "),s("h3",{attrs:{id:"协商缓存-last-modified-etag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-last-modified-etag"}},[t._v("#")]),t._v(" 协商缓存 Last-Modified / ETag")]),t._v(" "),s("p",[t._v("协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程")]),t._v(" "),s("p",[s("img",{attrs:{src:"/docs/js/http3.png",alt:"http3"}})]),t._v(" "),s("h3",{attrs:{id:"数据缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据缓存"}},[t._v("#")]),t._v(" 数据缓存")]),t._v(" "),s("p",[s("img",{attrs:{src:"/docs/js/http4.png",alt:"http4"}})]),t._v(" "),s("p",[t._v("第三步：DNS解析")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("递归查询")])]),t._v(" "),s("li",[s("p",[t._v("迭代查询")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/docs/js/http5.png",alt:"http5"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("每一次DNS解析时间预计在20~120毫秒\n\n减少DNS请求次数\n\nDNS预获取（DNS Prefetch）\n\n")])])]),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x-dns-prefetch-control"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//static.360buyimg.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//misc.360buyimg.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//img10.360buyimg.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//d.3.cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//d.jd.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("h3",{attrs:{id:"服务器拆分的优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器拆分的优势"}},[t._v("#")]),t._v(" 服务器拆分的优势")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("资源的合理利用\n\n抗压能力加强\n\n提高HTTP并发、\n\n……\n\n")])])]),s("p",[s("img",{attrs:{src:"/docs/js/http6.png",alt:"http6"}})]),t._v(" "),s("p",[t._v("第四步：TCP三次握手")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("seq序号，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记\n\nack确认序号，只有ACK标志位为1时，确认序号字段才有效，ack=seq+1\n\n标志位\n\nACK：确认序号有效\n\nRST：重置连接\n\nSYN：发起一个新连接\n\nFIN：释放一个连接\n\n……\n\n")])])]),s("p",[s("img",{attrs:{src:"/docs/js/http7.png",alt:"http7"}})]),t._v(" "),s("p",[t._v("三次握手为什么不用两次，或者四次?\nTCP作为一种可靠传输控制协议，其核心思想：既要保证数据可靠传输，又要提高传输的效率！")]),t._v(" "),s("p",[t._v("第五步：数据传输")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP报文\n\n请求报文\n\n响应报文\n\n响应状态码\n\n200 OK\n\n202 Accepted ：服务器已接受请求，但尚未处理（异步）\n\n204 No Content：服务器成功处理了请求，但不需要返回任何实体内容\n\n206 Partial Content：服务器已经成功处理了部分 GET 请求（断点续传 Range/If-Range/Content-Range/Content-Type:”multipart/byteranges”/Content-Length….）\n\n301 Moved Permanently\n\n302 Move Temporarily\n\n304 Not Modified\n\n305 Use Proxy\n\n400 Bad Request : 请求参数有误\n\n401 Unauthorized：权限（Authorization）\n\n404 Not Found\n\n405 Method Not Allowed\n\n408 Request Timeout\n\n500 Internal Server Error\n\n503 Service Unavailable\n\n505 HTTP Version Not Supported\n\n……\n\n")])])]),s("p",[t._v("第六步：TCP四次挥手")]),t._v(" "),s("p",[s("img",{attrs:{src:"/docs/js/http8.png",alt:"http8"}})]),t._v(" "),s("ul",[s("li",[t._v("为什么连接的时候是三次握手，关闭的时候却是四次握手？")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("服务器端收到客户端的SYN连接请求报文后，可以直接发送SYN+ACK报文\n\n但关闭连接时，当服务器端收到FIN报文时，很可能并不会立即关闭链接，所以只能先回复一个ACK报文，\n告诉客户端：”你发的FIN报文我收到了”，只有等到服务器端所有的报文都发送完了，我才能发送FIN报文，\n因此不能一起发送，故需要四步握手。\n\n\nConnection: keep-alive\n\n")])])]),s("p",[t._v("第七步：页面渲染")]),t._v(" "),s("h2",{attrs:{id:"性能优化汇总"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能优化汇总"}},[t._v("#")]),t._v(" 性能优化汇总")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n *     1.利用缓存\n *       + 对于静态资源文件实现强缓存和协商缓存（扩展：文件有更新，如何保证及时刷新？）  \n *       + 对于不经常更新的接口数据采用本地存储做数据缓存（扩展：cookie / localStorage / vuex|redux 区别？）\n *     2.DNS优化\n *       + 分服务器部署，增加HTTP并发性（导致DNS解析变慢）\n *       + DNS Prefetch\n *     3.TCP的三次握手和四次挥手\n *       + Connection:keep-alive\n *     4.数据传输\n *       + 减少数据传输的大小\n *         + 内容或者数据压缩（webpack等）\n *         + 服务器端一定要开启GZIP压缩（一般能压缩60%左右）\n *         + 大批量数据分批次请求（例如：下拉刷新或者分页，保证首次加载请求数据少）\n *       + 减少HTTP请求的次数\n *         + 资源文件合并处理\n *         + 字体图标\n *         + 雪碧图 CSS-Sprit\n *         + 图片的BASE64\n *       + ......\n *     5.CDN服务器“地域分布式”\n *     6.采用HTTP2.0\n * ==============\n * 网络优化是前端性能优化的中的重点内容，因为大部分的消耗都发生在网络层，尤其是第一次页面加载，如何减少等待时间很重要“减少白屏的效果和时间”\n *     + LOADDING 人性化体验\n *     + 骨架屏：客户端骨屏 + 服务器骨架屏\n *     + 图片延迟加载\n *     + ....\n */")]),t._v("\n")])])]),s("h2",{attrs:{id:"http1-0-vs-http1-1-vs-http2-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http1-0-vs-http1-1-vs-http2-0"}},[t._v("#")]),t._v(" HTTP1.0 VS HTTP1.1 VS HTTP2.0")]),t._v(" "),s("p",[s("img",{attrs:{src:"/docs/js/http9.png",alt:"http9"}})]),t._v(" "),s("h3",{attrs:{id:"http1-0和http1-1的一些区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http1-0和http1-1的一些区别"}},[t._v("#")]),t._v(" HTTP1.0和HTTP1.1的一些区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("缓存处理，HTTP1.0中主要使用 Last-Modified，Expires 来做为缓存判断的标准，HTTP1.1则引入了更多的缓存控制策略：ETag，Cache-Control…\n\n带宽优化及网络连接的使用，HTTP1.1支持断点续传，即返回码是206（Partial Content）\n\n错误通知的管理，在HTTP1.1中新增了24个错误状态响应码，如409（Conflict）表示请求的资源与资源的当前状态发生冲突；410（Gone）表示服务器上的某个资源被永久性的删除…\n\nHost头处理，在HTTP1.0中认为每台服务器都绑定一个唯一的IP地址，因此，请求消息中的URL并没有传递主机名（hostname）。但随着虚拟主机技术的发展，在一台物理服务器上可以存在多个虚拟主机（Multi-homed Web Servers），并且它们共享一个IP地址。HTTP1.1的请求消息和响应消息都应支持Host头域，且请求消息中如果没有Host头域会报告一个错误（400 Bad Request）\n\n长连接，HTTP1.1中默认开启Connection： keep-alive，一定程度上弥补了HTTP1.0每次请求都要创建连接的缺点\n\n")])])]),s("h3",{attrs:{id:"http2-0和http1-x相比的新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http2-0和http1-x相比的新特性"}},[t._v("#")]),t._v(" HTTP2.0和HTTP1.X相比的新特性")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("新的二进制格式（Binary Format），HTTP1.x的解析是基于文本，基于文本协议的格式解析存在天然缺陷，文本的表现形式有多样性，要做到健壮性考虑的场景必然很多，二进制则不同，只认0和1的组合，基于这种考虑HTTP2.0的协议解析决定采用二进制格式，实现方便且健壮")])]),t._v(" "),s("li",[s("p",[t._v("header压缩，HTTP1.x的header带有大量信息，而且每次都要重复发送，HTTP2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小")])]),t._v(" "),s("li",[s("p",[t._v("服务端推送（server push），例如我的网页有一个sytle.css的请求，在客户端收到sytle.css数据的同时，服务端会将sytle.js的文件推送给客户端，当客户端再次尝试获取sytle.js时就可以直接从缓存中获取到，不用再发请求了")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 通过在应用生成HTTP响应头信息中设置Link命令\nLink: </styles.css>; rel=preload; as=style, </example.png>; rel=preload; as=image\n")])])]),s("ul",[s("li",[t._v("多路复用（MultiPlexing）")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("- HTTP/1.0  每次请求响应，建立一个TCP连接，用完关闭\n- HTTP/1.1 「长连接」 若干个请求排队串行化单线程处理，后面的请求等待前面请求的返回才能获得执行机会，一旦有某请求超时等，后续请求只能被阻塞，毫无办法，也就是人们常说的线头阻塞；\n- HTTP/2.0 「多路复用」多个请求可同时在一个连接上并行执行，某个请求任务耗时严重，不会影响到其它连接的正常执行；\n\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);