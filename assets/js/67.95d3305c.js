(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{491:function(r,t,e){"use strict";e.r(t);var s=e(56),n=Object(s.a)({},(function(){var r=this,t=r.$createElement,e=r._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h2",{attrs:{id:"浏览器的底层渲染机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的底层渲染机制"}},[r._v("#")]),r._v(" 浏览器的底层渲染机制")]),r._v(" "),e("h3",{attrs:{id:"【dom树】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#【dom树】"}},[r._v("#")]),r._v(" 【DOM树】")]),r._v(" "),e("p",[e("img",{attrs:{src:"/docs/js/render1.png",alt:"render1"}})]),r._v(" "),e("h3",{attrs:{id:"【cssom树】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#【cssom树】"}},[r._v("#")]),r._v(" 【CSSOM树】")]),r._v(" "),e("p",[e("img",{attrs:{src:"/docs/js/render2.png",alt:"render2"}})]),r._v(" "),e("h3",{attrs:{id:"【render-tree渲染树】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#【render-tree渲染树】"}},[r._v("#")]),r._v(" 【Render-Tree渲染树】")]),r._v(" "),e("p",[e("img",{attrs:{src:"/docs/js/render3.png",alt:"render3"}})]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("总结步骤：\n\n处理 HTML 标记，构建 DOM 树\n\n处理 CSS 标记，构建 CSSOM 树\n\n将 DOM 树和 CSSOM 树融合成渲染树\n\n根据生成的渲染树，计算它们在设备视口(viewport)内的确切位置和大小，这个计算的阶段就是回流 => 布局（Layout）或 重排（reflow）\n\n根据渲染树以及回流得到的几何信息，得到节点的绝对像素 => 绘制（painting）\n\n")])])]),e("p",[e("img",{attrs:{src:"/docs/js/render4.png",alt:"render4"}})]),r._v(" "),e("h3",{attrs:{id:"优化方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化方案"}},[r._v("#")]),r._v(" 优化方案：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("标签语义化和避免深层次嵌套\n\nCSS选择器渲染是从右到左\n\n尽早尽快地把CSS下载到客户端（充分利用HTTP多请求并发机制）\n\nstyle\n\nlink\n\n@import\n\n放到顶部\n\n避免阻塞的JS加载\n\nasync\n\ndefer\n\n放到底部\n")])])]),e("p",[e("img",{attrs:{src:"/docs/js/render5.png",alt:"render5"}})]),r._v(" "),e("blockquote",[e("p",[r._v("Webkit浏览器预测解析：chrome的预加载扫描器html-preload-scanner通过扫描节点中的 “src” , “link”等属性，找到外部连接资源后进行预加载，避免了资源加载的等待时间，同样实现了提前加载以及加载和执行分离。")])]),r._v(" "),e("h2",{attrs:{id:"减少dom的回流和重绘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#减少dom的回流和重绘"}},[r._v("#")]),r._v(" 减少DOM的回流和重绘")]),r._v(" "),e("p",[e("img",{attrs:{src:"/docs/js/render6.png",alt:"render6"}}),r._v(" "),e("img",{attrs:{src:"/docs/js/render7.png",alt:"render7"}}),r._v(" "),e("img",{attrs:{src:"/docs/js/render8.png",alt:"render8"}}),r._v(" "),e("img",{attrs:{src:"/docs/js/render9.png",alt:"render9"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);